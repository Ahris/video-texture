primitiveLoops = [ [9 4]; [8 7]; [5 2]; [3 1]; ]'; % remove me
compoundLoop = [ [4 9]; [7 8]; [2 5]; [1 3]; ]'; % ABCD, remove me

% Flip primitive loops (it'll be passed in (end, start) but
% we correct it here to make things easier
primitiveLoops([1 2],:) = primitiveLoops([2 1],:);

% Start scheduling
numScheduled = 1;
scheduled = zeros(2, length(compoundLoop));
[~, last]  = max(compoundLoop(2, :));
scheduled(:, numScheduled) = compoundLoop(:, last);
numScheduled = numScheduled + 1;
j = scheduled(1, 1);
compoundLoop(:, last) = [0;0];

for i = 1:length(compoundLoop)
  % Find min end index that starts after j
  minEnd = scheduled(2, 1);
  minCompLoopIdx = 0;
  
  if compoundLoop(2, i) > j && compoundLoop(2, i) < minEnd
    minCompLoopIdx = i;
    minEnd = compoundLoop(2, i);
  end
  
  % Schedule this loop, since it's the first loop
  % that has an end > j
  scheduled(:, numScheduled) = compoundLoop(:, minCompLoopIdx);
  numScheduled = numScheduled + 1;
  % Remove the loop from compoundLoop
  compoundLoop(:, minIdx) = [0;0];
end

scheduled
